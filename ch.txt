diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
index 0000000..4556c47
--- /dev/null
+++ b/.idea/compiler.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel>
+      <module name="d" target="1.8" />
+      <module name="d.main" target="1.8" />
+      <module name="d.test" target="1.8" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
index 0000000..e9fcbe9
--- /dev/null
+++ b/.idea/gradle.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$USER_HOME$/Projects/d" />
+        <option name="modules">
+          <set>
+            <option value="$USER_HOME$/Projects/d" />
+          </set>
+        </option>
+        <option name="useQualifiedModuleNames" value="true" />
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
index 0000000..fdc392f
--- /dev/null
+++ b/.idea/jarRepositories.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="MavenRepo" />
+      <option name="name" value="MavenRepo" />
+      <option name="url" value="https://repo.maven.apache.org/maven2/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/libraries/Gradle__junit_junit_4_12.xml b/.idea/libraries/Gradle__junit_junit_4_12.xml
new file mode 100644
index 0000000..04c10dd
--- /dev/null
+++ b/.idea/libraries/Gradle__junit_junit_4_12.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: junit:junit:4.12">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/a6c32b40bf3d76eca54e3c601e5d1470c86fcdfa/junit-4.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml b/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml
new file mode 100644
index 0000000..8262f72
--- /dev/null
+++ b/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hamcrest:hamcrest-core:1.3">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/1dc37250fbc78e23a65a67fbbaf71d2e9cbc3c0b/hamcrest-core-1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
index f946731..c896963 100644
--- a/.idea/modules.xml
+++ b/.idea/modules.xml
@@ -2,6 +2,9 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/d.iml" filepath="$PROJECT_DIR$/.idea/modules/d.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/d.main.iml" filepath="$PROJECT_DIR$/.idea/modules/d.main.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/modules/d.test.iml" filepath="$PROJECT_DIR$/.idea/modules/d.test.iml" />
       <module fileurl="file://$PROJECT_DIR$/ordinals.iml" filepath="$PROJECT_DIR$/ordinals.iml" />
     </modules>
   </component>
diff --git a/.idea/modules/d.iml b/.idea/modules/d.iml
new file mode 100644
index 0000000..12338a1
--- /dev/null
+++ b/.idea/modules/d.iml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id="d" external.linked.project.path="$USER_HOME$/Projects/d" external.root.project.path="$USER_HOME$/Projects/d" external.system.id="GRADLE" external.system.module.group="org.example" external.system.module.version="1.0-SNAPSHOT" type="JAVA_MODULE" version="4">
+  <component name="ExternalSystem" linkedProjectPath="$USER_HOME$/Projects/d" rootProjectPath="$USER_HOME$/Projects/d" />
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$USER_HOME$/Projects/d">
+      <excludeFolder url="file://$USER_HOME$/Projects/d/.gradle" />
+      <excludeFolder url="file://$USER_HOME$/Projects/d/build" />
+    </content>
+    <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/modules/d.main.iml b/.idea/modules/d.main.iml
new file mode 100644
index 0000000..7e7e286
--- /dev/null
+++ b/.idea/modules/d.main.iml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id="d:main" external.linked.project.path="$USER_HOME$/Projects/d" external.root.project.path="$USER_HOME$/Projects/d" external.system.id="GRADLE" external.system.module.group="org.example" external.system.module.type="sourceSet" external.system.module.version="1.0-SNAPSHOT" type="JAVA_MODULE" version="4">
+  <component name="ExternalSystem" linkedProjectPath="$USER_HOME$/Projects/d" rootProjectPath="$USER_HOME$/Projects/d" />
+  <component name="NewModuleRootManager">
+    <output url="file://$USER_HOME$/Projects/d/build/classes/java/main" />
+    <exclude-output />
+    <content url="file://$USER_HOME$/Projects/d/src/main">
+      <sourceFolder url="file://$USER_HOME$/Projects/d/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$USER_HOME$/Projects/d/src/main/resources" type="java-resource" />
+    </content>
+    <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/modules/d.test.iml b/.idea/modules/d.test.iml
new file mode 100644
index 0000000..561aea7
--- /dev/null
+++ b/.idea/modules/d.test.iml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id="d:test" external.linked.project.path="$USER_HOME$/Projects/d" external.root.project.path="$USER_HOME$/Projects/d" external.system.id="GRADLE" external.system.module.group="org.example" external.system.module.type="sourceSet" external.system.module.version="1.0-SNAPSHOT" type="JAVA_MODULE" version="4">
+  <component name="ExternalSystem" linkedProjectPath="$USER_HOME$/Projects/d" rootProjectPath="$USER_HOME$/Projects/d" />
+  <component name="NewModuleRootManager">
+    <output-test url="file://$USER_HOME$/Projects/d/build/classes/java/test" />
+    <exclude-output />
+    <content url="file://$USER_HOME$/Projects/d/src/test">
+      <sourceFolder url="file://$USER_HOME$/Projects/d/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$USER_HOME$/Projects/d/src/test/resources" type="java-test-resource" />
+    </content>
+    <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="d.main" />
+    <orderEntry type="library" name="Gradle: junit:junit:4.12" level="project" />
+    <orderEntry type="library" name="Gradle: org.hamcrest:hamcrest-core:1.3" level="project" />
+  </component>
+  <component name="TestModuleProperties" production-module="d.main" />
+</module>
\ No newline at end of file
diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..c3c0a44
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,10 @@
+{
+    "java.project.sourcePaths": [
+        "src"
+    ],
+    "java.project.resourceFilters": [
+        "node_modules",
+        ".git"
+    ],
+
+}
\ No newline at end of file
diff --git a/README.md b/README.md
index 008046f..81b2aa9 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,128 @@
-# ordinal-indicator
-Opensource project on ordinal indicator for all languages https://en.wikipedia.org/wiki/Ordinal_indicator
+# Ordinals
+Welcome to the world of Ordinals. 
+
+This project aims to represent a cardinal number as an ordinal for any language conceivable on planet Earth and beyond! However, first things first, what is an ordinal?
+
+## What is an Ordinal?
+An ordinal is a word that is used to describe the position of an entity in a series.
+
+For example, "first" is the English word used to describe the entity that comes before any other entity in a series of entities. "second" is the word that describes the entity that comes after the "first" entity.
+
+It's prudent to note that "first" and "second" refer to different entities. 
+
+Different languages have different words for ordinals. The ordinal representation as used in Spanish is not the same as the one you will find used in French even though the two representations describe the same series.
+
+## What spoken languages do we cover
+As many as we can. This project aims to address ordinals for any language conceivable on planet Earth and beyond! It's also meant to be extendable, feel free to provide support for a spoken language of your choice. However, in the meantime, we are fully covering the following languages:
+* English
+* French
+* German
+
+Work on the following languages is in progress:
+* Spanish
+* Italian
+
+Feel free to provide feedback on the accuracy of our translations. We'll appreciate that.
+
+## How do I contribute
+You can start by joining our project here https://github.com/Gilboot/ordinals/projects/1. We welcome contributions to issues that have been logged.
+
+## Can my contributions make a difference
+Sure they can. Our mission is to express any number as an ordinal for all languages on planet Earth and beyond! All you need to do is to find a language we are not yet covering and express it as a set or rules using a domain specific language we invented and that should be it.
+
+## Am I allowed to use this project in my own work?
+Yes! The project uses an MIT License. You're free to use our software but be sure to give a shout out for us.
+
+
+## What programming languages are covered?
+We are looking into ways of porting the library to any programming language. However, as of now, the following programming languages are supported:
+* Java
+
+## How can I get it? Are there any jar/artifacts/releases to download?
+We don’t have these yet, download the code and build it.
+
+## How do I run the project?
+Make sure you have [ant](https://ant.apache.org/manual/install.html) installed on your system. 
+From the command line, build the project by running the following command:
+> ant
+
+The project will be compiled, and a few tests will run. If everything goes well, the build will succeed without giving any errors. Once that is done you can proceed to perform a few cli commands.
+
+## Command Line support
+The Ordinals project has support for a command line interface that can be used to generate corresponding ordinals of various cardinals in different locales. 
+To start the cli, run the following command from your terminal or command prompt, make sure you are in the ordinals directory:
+> java -jar dist/ordinals.jar
+
+A prompt will show up that should look like this: 
+> ordinals(en_US)>
+
+The locale in the brackets represents the current locale being used and it defaults to English - United States.
+
+Run the following command:
+> help
+
+A list of commands that can be used will be listed. They should look like this:
+> rules
+> 
+> locale
+> 
+> suffix
+> 
+> help
+> 
+> exit
+
+To exit out of the prompt run:
+> exit
+
+The ordinals prompt should now be exited and you should be returned to the default prompt / terminal. To get back to the prompt run:
+> java -jar dist/ordinals.jar
+
+Run the following command to learn how to use the locale command:
+> locale
+
+Usage information should be displayed. After that run the following command to change to the French locale:
+> locale fr FR
+
+The prompt should now look like this:
+> ordinals(fr_FR)>
+
+Switch back to English by running the following command
+> locale en US
+
+To see the rules we have for the current locale run:
+> rules
+
+A list of rules will be displayed. It is these rules that are used to obtain the ordinals for various numbers or cardinals.
+
+We can find out the ordinal generated for a given number by using the suffix command. From the prompt, type:
+> suffix 1
+
+The program should return 
+> st
+
+Try getting suffix for other numbers like 2, 3, 5, 11 etc.
+> suffix 2
+> 
+> suffix 3
+> 
+> suffix 5
+> 
+> suffix 11
+> 
+> suffix book
+
+Notice that the correct ordinal will be generated for these numbers and an error will be displayed for a wrong input
+> nd
+> 
+> rd
+> 
+> th
+> 
+> th
+> 
+> error: For input string: "book"
+
 
 #How to build and test
 ## Ant
diff --git a/ordinals.iml b/ordinals.iml
index c90834f..8433b9d 100644
--- a/ordinals.iml
+++ b/ordinals.iml
@@ -4,6 +4,7 @@
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/resources" type="java-resource" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
diff --git a/resources/com/github/ordinals/ordinals-es_ES.xml b/resources/com/github/ordinals/ordinals-es_ES.xml
index 7140058..f0ebd32 100644
--- a/resources/com/github/ordinals/ordinals-es_ES.xml
+++ b/resources/com/github/ordinals/ordinals-es_ES.xml
@@ -1,8 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
-
-<!--SOURCE: https://www.spanishdict.com/guide/ordinal-numbers-in-spanish -->
-<!--SOURCE: https://www.thoughtco.com/ordinal-numbers-in-spanish-3079591 -->
-
+<!--@see https://www.spanishdict.com/guide/ordinal-numbers-in-spanish -->
+<!--@see https://www.thoughtco.com/ordinal-numbers-in-spanish-3079591 -->
 <rules locale="es_ES" join="replace" type="recursive">
     <!--    1 -->
     <rule precedence="11" gender="m" plural="s" value="1" short_suffix="o" long_suffix="primer" />
diff --git a/resources/com/github/ordinals/ordinals-it_IT.xml b/resources/com/github/ordinals/ordinals-it_IT.xml
deleted file mode 100644
index ad93606..0000000
--- a/resources/com/github/ordinals/ordinals-it_IT.xml
+++ /dev/null
@@ -1,74 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--SOURCE: https://www.thoughtco.com/italian-ordinal-numbers-2011379 -->
-
-<rules locale="it_IT" short_suffix_masc="o" short_suffix_fem="a" plural="n" join="replace">
-    <!--    1 -->
-    <rule type="exact" precedence="11" gender="m" plural="s" value="1" long_suffix="primo" />
-    <rule type="exact" precedence="12" gender="f" plural="s" value="1" long_suffix="prima" />
-    <rule type="exact" precedence="13" gender="m" plural="p" value="1" long_suffix="primi" />
-    <rule type="exact" precedence="14" gender="f" plural="p" value="1" long_suffix="prime" />
-
-    <!--    2 -->
-    <rule type="exact" precedence="21" gender="m" plural="s" value="2" long_suffix="secondo" />
-    <rule type="exact" precedence="22" gender="f" plural="s" value="2" long_suffix="secondi" />
-    <rule type="exact" precedence="23" gender="m" plural="p" value="2" long_suffix="seconda" />
-    <rule type="exact" precedence="24" gender="f" plural="p" value="2" long_suffix="seconde" />
-
-    <!--    3 -->
-    <rule type="exact" precedence="31" gender="m" plural="s" value="3" long_suffix="terzo" />
-    <rule type="exact" precedence="32" gender="f" plural="s" value="3" long_suffix="terzi" />
-    <rule type="exact" precedence="33" gender="m" plural="p" value="3" long_suffix="terza" />
-    <rule type="exact" precedence="34" gender="f" plural="p" value="3" long_suffix="terze" />
-
-    <!--    4 -->
-    <rule type="exact" precedence="41" gender="m" value="4" long_suffix="quarto" />
-    <rule type="exact" precedence="42" gender="f" value="4" long_suffix="quarta" />
-
-    <!--    5 -->
-    <rule type="exact" precedence="51" gender="m" value="5" long_suffix="quinto" />
-    <rule type="exact" precedence="52" gender="f" value="5" long_suffix="quinta" />
-
-    <!--    6 -->
-    <rule type="exact" precedence="61" gender="m" value="6" long_suffix="sesto" />
-    <rule type="exact" precedence="62" gender="f" value="6" long_suffix="sesta" />
-
-    <!--    7 -->
-    <rule type="exact" precedence="71" gender="m" value="7" long_suffix="settimo" />
-    <rule type="exact" precedence="72" gender="f" value="7" long_suffix="settima" />
-
-    <!--    8 -->
-    <rule type="exact" precedence="81" gender="m" value="8" long_suffix="ottavo" />
-    <rule type="exact" precedence="82" gender="f" value="8" long_suffix="ottava" />
-
-    <!--    9 -->
-    <rule type="exact" precedence="91" gender="m" value="9" long_suffix="nono" />
-    <rule type="exact" precedence="92" gender="f" value="9" long_suffix="nona" />
-
-    <!--    10 -->
-    <rule type="exact" precedence="101" gender="m" value="10" long_suffix="decimo" />
-    <rule type="exact" precedence="102" gender="f" value="10" long_suffix="decima" />
-
-    <!--    Between 11 and 20 -->
-    <!--    To prevent rules meant for 20 and beyond from targeting this range -->
-
-    <rule type="inequality" less="21" more="10" precedence="201" gender="m" long_suffix="esimo" join="minus_one" />
-    <rule type="inequality" less="21" more="10" precedence="202" gender="f" long_suffix="esima" join="minus_one" />
-
-    <!--    Beyond 20 -->
-    <!--    Must come last in precedence -->
-
-    <!--    3 modulus 10, also note that full name of cardinal ends with "tré" -->
-    <rule type="modulo" remainder="3" modulus="10" precedence="301" gender="m" long_suffix="treesimo" join="minus_three" />
-    <rule type="modulo" remainder="3" modulus="10" precedence="302" gender="f" long_suffix="treesima" join="minus_three" />
-
-    <!--    6 modulus 10, also note that full name of cardinal ends with "sei" -->
-    <rule type="modulo" remainder="6" modulus="10" precedence="401" gender="m" long_suffix="esimo" join="no_space" />
-    <rule type="modulo" remainder="6" modulus="10" precedence="402" gender="f" long_suffix="esima" join="no_space" />
-
-    <!--    Others -->
-    <rule type="inequality" more="20" precedence="501" gender="m" long_suffix="esimo" join="minus_one" />
-    <rule type="inequality" more="20" precedence="502" gender="f" long_suffix="esima" join="minus_one" />
-
-
-</rules>
\ No newline at end of file
diff --git a/src/com/github/ordinals/OrdinalsFactory.java b/src/com/github/ordinals/OrdinalsFactory.java
index dc128c8..74ed068 100644
--- a/src/com/github/ordinals/OrdinalsFactory.java
+++ b/src/com/github/ordinals/OrdinalsFactory.java
@@ -12,6 +12,9 @@ import java.util.concurrent.ConcurrentMap;
 import java.util.concurrent.CopyOnWriteArrayList;
 
 /**
+ * Note: This should be called OrdinalsFactory. 
+ * It is not an abstract factory because it does not have a set of methods where each method creates and returns an object.
+ * It is also not a factory method because it is a class and not a method.
  * @see https://stackoverflow.com/q/4011075/10030693
  * @see https://en.m.wikipedia.org/wiki/Ordinal_indicator
  */
diff --git a/src/com/github/ordinals/ResourceReader.java b/src/com/github/ordinals/ResourceReader.java
index 9ee4340..11bfe9f 100644
--- a/src/com/github/ordinals/ResourceReader.java
+++ b/src/com/github/ordinals/ResourceReader.java
@@ -1,6 +1,8 @@
 package com.github.ordinals;
 
 import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
 import java.io.InputStream;
 import java.util.Locale;
 
@@ -26,6 +28,18 @@ final class ResourceReader {
         return inputStream;
     }
 
+
+    // Read from path
+    static InputStream readResourcePathAsStream(final String resourcePath) {
+        try {
+            File file = new File(resourcePath);
+            return new FileInputStream(file);
+        } catch (FileNotFoundException e) {
+            throw new OrdinalsException("File at path " + resourcePath + " was not found");
+        }
+    }
+
+
     /**
      * Produces resource name as a function of {@code Locale}.
      *
diff --git a/src/com/github/ordinals/TestXMLParser.java b/src/com/github/ordinals/TestXMLParser.java
index 4f78b3f..0742332 100644
--- a/src/com/github/ordinals/TestXMLParser.java
+++ b/src/com/github/ordinals/TestXMLParser.java
@@ -1,5 +1,6 @@
 package com.github.ordinals;
 
+import java.io.InputStream;
 import java.util.Locale;
 
 /**
@@ -7,6 +8,8 @@ import java.util.Locale;
  */
 public final class TestXMLParser {
     public static void main(final String... args) {
-        new XMLParser().parse(Locale.US).forEach(System.out::println);
+//        new XMLParser().parse(Locale.US).forEach(System.out::println);
+        InputStream is = ResourceReader.readResourcePathAsStream("resources/com/github/ordinals/ordinals-de.xml");
+        System.out.println(is);
     }
 }
diff --git a/src/com/github/ordinals/XMLParser.java b/src/com/github/ordinals/XMLParser.java
index f769212..10b7fca 100644
--- a/src/com/github/ordinals/XMLParser.java
+++ b/src/com/github/ordinals/XMLParser.java
@@ -293,7 +293,7 @@ final class XMLParser {
      *                               cannot be parsed as an {@code int}.
      */
     private int getAttributeAsInteger(final Element element, final String attribute, final int defaultValue) {
-        final boolean has = element.hasAttribute​(attribute);
+        final boolean has = element.hasAttribute(attribute);
         return has ? getAttributeAsInteger(element, attribute) : defaultValue;
     }
 
